name: 'Storybook Deployment'
on:
  pull_request:
    branches:
      - dev
      - main
permissions:
  pull-requests: write
jobs:
  storybook:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-storybook

      - name: dependency install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: publish to chromatic
        if: steps.cache.outputs.cache-hit != 'true'
        id: chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: comment PR
        uses: actions/github-script@v7
        env:
          STORYBOOK_URL: ${{ steps.chromatic.outputs.storybookUrl }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const storybookUrl = '${{ steps.chromatic.outputs.storybookUrl }}';
            const commentBody = `<h2 style="color: #ff528c">✨ storybook: <span style="color: #bf78ec">${storybookUrl}</span></h2>`;
            const { data: existingComments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });

            // 기존 댓글이 존재하는 경우 첫 번째 댓글을 업데이트
            if (existingComments.length > 0) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComments[0].id,
                body: commentBody,
              });
            } else {  // 기존 댓글이 없는 경우 새로운 댓글 작성
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: commentBody,
              });
            }
